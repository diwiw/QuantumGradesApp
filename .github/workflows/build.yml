name: CI Build & Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  ubuntu-build:
    name: Ubuntu • Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install deps (Ubuntu)
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build cmake build-essential ccache \
            libcurl4-openssl-dev pkg-config

      - name: Setup ccache
        run: |
          mkdir -p ~/.ccache
          echo 'max_size = 500M' > ~/.ccache/ccache.conf

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake', '**/*.hpp', '**/*.h', '**/*.cpp') }}
          restore-keys: |
            ${{ runner.os }}-ccache-


      - name: Configure
        run: |
          cmake -S . -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=RelWithDebInfo \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DCMAKE_C_COMPILER_LAUNCHER=ccache \
            -DBUILD_EXAMPLES=ON -DBUILD_DOCS=OFF

      - name: Build
        run: cmake --build build --parallel

      - name: Run Tests
        run: ctest --test-dir build --output-on-failure

      - name: Upload Sample Outputs
        uses: actions/upload-artifact@v4
        with:
          name: sample-outputs-ubuntu
          path: |
            build/examples/*.csv
            build/examples/*.json
            build/examples/*.log
          if-no-files-found: ignore

  windows-build:
  name: Windows • Build & Test
  runs-on: windows-latest

  steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install dependencies (Chocolatey)
      run: |
        choco install -y cmake ninja git curl openssl
        refreshenv

    - name: Configure
      run: cmake -S . -B build -G "Ninja" `
        -DCMAKE_BUILD_TYPE=RelWithDebInfo `
        -DBUILD_EXAMPLES=ON -DBUILD_DOCS=OFF

    - name: Build
      run: cmake --build build --parallel

    - name: Test
      run: ctest --test-dir build --output-on-failure

    - name: Upload Sample Outputs
      uses: actions/upload-artifact@v4
      with:
        name: sample-outputs-windows
        path: |
            build/RelWithDebInfo/*.csv
            build/RelWithDebInfo/*.json
            build/RelWithDebInfo/*.log
          if-no-files-found: ignore
